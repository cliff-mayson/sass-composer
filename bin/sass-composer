#!/usr/bin/env node

var fs        = require('fs');
var path      = require('path');
var program   = require('commander');
var chokidar  = require('chokidar');

var Composer  = require('..');
var metadata  = require('../package.json');

program
  .version(metadata.version)
  .description(metadata.description)
  .usage('<file> [options]')
  .option('-o, --output [file]',  'write output to a file')
  .option('-w, --watch',          'watch files for changes')
  .parse(process.argv)
;

function compose(input, output, callback) {

  fs.exists(input, function(exists) {

    if (!exists) {
      return console.error('Error reading file "'+input+'": File does not exist.');
    }

    //create the composer
    var composer = Composer();

    //configure the URL plugin
    if (output) {
      var plugin = require('../lib/plugins/url');
      composer.use(plugin({dir: path.dirname(output)}));
    }

    //compose CSS from a SASS file
    composer
      .entry(input)
      .compose(function(err, css, stats) {
        if (err) return console.error('Error composing file "'+input+'": \n', err.message) || callback(err);

        //write to file or display on screen
        if (output) {
          //TODO: create the directory
          fs.writeFile(output, css, function() {
            if (err) return console.error('Error writing file "'+input+'": \n', err.message) || callback(err);
            console.log('Composed "'+path.basename(input)+'" to "'+path.basename(output)+'".');
            callback(null, stats);
          });
        } else {
          console.log(css.toString());
          callback(null, stats);
        }

      })
    ;

  });

}

if (program.args.length) {

  var
    input   = program.args[0] || '',
    output  = program.output,
    watch   = program.watch
  ;

  compose(input, output, function(err, stats) {
    if (err) return console.error(err);

    if (watch) {

      var composing = false;

      function stopWatching(err) {
        watcher.close();
      }

      var files   = stats.watchedFiles;
      var watcher = chokidar
        .watch(input, {persistent: true})
        .add(stats.watchedFiles)
        .on('change', function(path) {

          if (composing) {
            return;
          }

          if (output) {
            console.log('Changed "'+path+'":');
          }

          composing = true;
          compose(input, output, function(err, stats) {
            composing = false;
            if (err) return stopWatching(err);
            watcher.unwatch(files);
            files = stats.watchedFiles;
            watcher.add(files);
          });

        })
        .on('error', stopWatching)
      ;

      process.on('SIGINT', function() {
        watcher.close();
        process.exit();
      });

    }

  });

} else {
  program.outputHelp();
}
